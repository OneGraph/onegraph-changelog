{"version":3,"sources":["__generated__/Post_AddReactionMutation.graphql.js","__generated__/Post_RemoveReactionMutation.graphql.js","__generated__/Post_post.graphql.js","__generated__/Posts_repository.graphql.js","__generated__/PostsPaginationQuery.graphql.js","__generated__/App_Query.graphql.js","__generated__/App_Post_Query.graphql.js","MarkdownRenderer.js","emojiIcon.svg","addIcon.svg","GitHubLoginButton.js","Post.js","loadingSpinner.svg","Posts.js","relayResponseCache.js","Environment.js","oneGraphLogo.svg","App.js","serviceWorker.js","index.js"],"names":["node","v0","v1","v2","v3","v4","hash","module","exports","v5","v6","v7","v8","v9","CodeBlock","this","props","language","value","style","React","PureComponent","MarkdownRenderer","source","renderers","code","_extends","Object","assign","target","i","arguments","length","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","title","viewBox","ref","ForwardRef","forwardRef","fill","strokeWidth","GitHubButton","display","border","borderRadius","boxHhadow","color","cursor","fontSize","margin","height","background","alignItems","role","width","xmlns","marginLeft","addReactionMutation","removeReactionMutation","reactionUpdater","store","viewerHasReacted","postId","content","reactionGroup","get","getLinkedRecords","find","r","getValue","setValue","users","getLinkedRecord","Math","max","addReaction","a","environment","variables","input","subjectId","Promise","resolve","reject","commitMutation","mutation","onCompleted","response","errors","onError","err","optimisticUpdater","updater","data","removeReaction","emojiForContent","reactions","EmojiPicker","viewerReactions","onSelect","onDeselect","isLoggedIn","login","reactionContent","reaction","isSelected","includes","outline","padding","backgroundColor","onClick","textAlign","slice","map","GitHubLoginButton","PostBox","children","Box","maxWidth","boxShadow","createFragmentContainer","relay","post","logout","showReactionPopover","setShowReactionPopover","popoverInstance","usedReactions","reactionGroups","filter","g","totalCount","authors","assignees","nodes","pad","Heading","level","to","number","onMouseOver","fetchQuery","postRootQuery","issueNumber","Text","size","formatDate","Date","createdAt","body","side","align","direction","alt","name","src","avatarUrl","marginRight","wrap","borderRight","onCreate","instance","current","arrow","trigger","theme","inertia","interactive","animateFill","interactiveBorder","duration","x","hide","id","NotificationManager","error","className","stroke","WORDS","randInt","floor","random","randomWord","LoadingPost","s","charAt","toUpperCase","Array","_x","join","_p","_w","escapeHtml","cx","cy","strokeDasharray","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","preserveAspectRatio","createPaginationContainer","repository","useState","isLoading","setIsLoading","scheduledRef","useRef","handleScroll","useCallback","window","requestAnimationFrame","innerHeight","document","documentElement","scrollTop","offsetHeight","hasMore","console","log","loadMore","useEffect","addEventListener","removeEventListener","issues","edges","e","getConnectionFromProps","getVariables","fragmentVariables","count","orderBy","query","RelayQueryResponseCache","ttl","_responses","Map","_size","_ttl","clear","queryID","cacheKey","getCacheKey","forEach","fetchTime","now","delete","payload","then","extensions","cacheTimestamp","set","firstKey","next","done","JSON","stringify","stableCopy","ONEGRAPH_APP_ID","onegraphAuth","OneGraphAuth","appId","communicationMode","cache","Environment","network","Network","create","operation","cacheConfig","queryId","text","forceFetch","force","fromCache","isMutation","operationKind","isQuery","resp","fetch","method","headers","Accept","authHeaders","doc_id","json","gitHub","Store","RecordSource","global","font","family","postsRootQuery","location","pathname","PostsRoot","render","respository","PostRoot","issue","App","state","_login","setState","_logout","Grommet","Grid","rows","columns","areas","start","end","gridArea","justify","horizontal","vertical","Anchor","href","path","exact","parseInt","match","params","Component","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfde400c.chunk.js","sourcesContent":["/**\n * @flow\n * @relayHash 537b721ffe865b904b58db537705c2b6\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GitHubReactionContent = \"CONFUSED\" | \"EYES\" | \"HEART\" | \"HOORAY\" | \"LAUGH\" | \"ROCKET\" | \"THUMBS_DOWN\" | \"THUMBS_UP\" | \"%future added value\";\nexport type GitHubAddReactionInput = {|\n  clientMutationId?: ?string,\n  content: GitHubReactionContent,\n  subjectId: string,\n|};\nexport type Post_AddReactionMutationVariables = {|\n  input: GitHubAddReactionInput\n|};\nexport type Post_AddReactionMutationResponse = {|\n  +gitHub: ?{|\n    +addReaction: ?{|\n      +reaction: ?{|\n        +content: GitHubReactionContent,\n        +user: ?{|\n          +login: string\n        |},\n      |}\n    |}\n  |}\n|};\nexport type Post_AddReactionMutation = {|\n  variables: Post_AddReactionMutationVariables,\n  response: Post_AddReactionMutationResponse,\n|};\n*/\n\n\n/*\nmutation Post_AddReactionMutation(\n  $input: GitHubAddReactionInput!\n) {\n  gitHub {\n    addReaction(input: $input) {\n      reaction {\n        content\n        user {\n          login\n          id\n        }\n        id\n      }\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"GitHubAddReactionInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"input\",\n    \"variableName\": \"input\"\n  }\n],\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"content\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv3 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"login\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv4 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"Post_AddReactionMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"gitHub\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"GitHubMutation\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"addReaction\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"GitHubAddReactionPayload\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"reaction\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"GitHubReaction\",\n                \"plural\": false,\n                \"selections\": [\n                  (v2/*: any*/),\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"user\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"GitHubUser\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v3/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"Post_AddReactionMutation\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"gitHub\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"GitHubMutation\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"addReaction\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"GitHubAddReactionPayload\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"reaction\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"GitHubReaction\",\n                \"plural\": false,\n                \"selections\": [\n                  (v2/*: any*/),\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"user\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"GitHubUser\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      (v4/*: any*/)\n                    ]\n                  },\n                  (v4/*: any*/)\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"mutation\",\n    \"name\": \"Post_AddReactionMutation\",\n    \"id\": \"f7155b65-8b44-4a3c-8189-de336995ead2\",\n    \"text\": null,\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '5d62de9c17f536fef2453f920b4f27ec';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash f0a98fab87305eb99d6eeb07391d43a0\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GitHubReactionContent = \"CONFUSED\" | \"EYES\" | \"HEART\" | \"HOORAY\" | \"LAUGH\" | \"ROCKET\" | \"THUMBS_DOWN\" | \"THUMBS_UP\" | \"%future added value\";\nexport type GitHubRemoveReactionInput = {|\n  clientMutationId?: ?string,\n  content: GitHubReactionContent,\n  subjectId: string,\n|};\nexport type Post_RemoveReactionMutationVariables = {|\n  input: GitHubRemoveReactionInput\n|};\nexport type Post_RemoveReactionMutationResponse = {|\n  +gitHub: ?{|\n    +removeReaction: ?{|\n      +reaction: ?{|\n        +content: GitHubReactionContent,\n        +user: ?{|\n          +login: string\n        |},\n      |}\n    |}\n  |}\n|};\nexport type Post_RemoveReactionMutation = {|\n  variables: Post_RemoveReactionMutationVariables,\n  response: Post_RemoveReactionMutationResponse,\n|};\n*/\n\n\n/*\nmutation Post_RemoveReactionMutation(\n  $input: GitHubRemoveReactionInput!\n) {\n  gitHub {\n    removeReaction(input: $input) {\n      reaction {\n        content\n        user {\n          login\n          id\n        }\n        id\n      }\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"GitHubRemoveReactionInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"input\",\n    \"variableName\": \"input\"\n  }\n],\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"content\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv3 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"login\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv4 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"Post_RemoveReactionMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"gitHub\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"GitHubMutation\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"removeReaction\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"GitHubRemoveReactionPayload\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"reaction\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"GitHubReaction\",\n                \"plural\": false,\n                \"selections\": [\n                  (v2/*: any*/),\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"user\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"GitHubUser\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v3/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"Post_RemoveReactionMutation\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"gitHub\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"GitHubMutation\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"removeReaction\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"GitHubRemoveReactionPayload\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"reaction\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"GitHubReaction\",\n                \"plural\": false,\n                \"selections\": [\n                  (v2/*: any*/),\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"user\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"GitHubUser\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      (v4/*: any*/)\n                    ]\n                  },\n                  (v4/*: any*/)\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"mutation\",\n    \"name\": \"Post_RemoveReactionMutation\",\n    \"id\": \"bbdbb007-7aa0-4381-b44e-5bb2a3874b74\",\n    \"text\": null,\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '05bba191eb94ffe772255f1e2cfa6d43';\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\nexport type GitHubReactionContent = \"CONFUSED\" | \"EYES\" | \"HEART\" | \"HOORAY\" | \"LAUGH\" | \"ROCKET\" | \"THUMBS_DOWN\" | \"THUMBS_UP\" | \"%future added value\";\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type Post_post$ref: FragmentReference;\ndeclare export opaque type Post_post$fragmentType: Post_post$ref;\nexport type Post_post = {|\n  +id: string,\n  +number: number,\n  +title: string,\n  +body: string,\n  +createdAt: string,\n  +author: ?{|\n    +login: string,\n    +avatarUrl: string,\n  |},\n  +updatedAt: string,\n  +assignees: {|\n    +nodes: ?$ReadOnlyArray<?{|\n      +name: ?string,\n      +login: string,\n      +avatarUrl: string,\n    |}>\n  |},\n  +reactionGroups: ?$ReadOnlyArray<{|\n    +content: GitHubReactionContent,\n    +viewerHasReacted: boolean,\n    +users: {|\n      +totalCount: number\n    |},\n  |}>,\n  +comments: {|\n    +totalCount: number\n  |},\n  +$refType: Post_post$ref,\n|};\nexport type Post_post$data = Post_post;\nexport type Post_post$key = {\n  +$data?: Post_post$data,\n  +$fragmentRefs: Post_post$ref,\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"login\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"avatarUrl\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"kind\": \"ScalarField\",\n    \"alias\": null,\n    \"name\": \"totalCount\",\n    \"args\": null,\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"kind\": \"Fragment\",\n  \"name\": \"Post_post\",\n  \"type\": \"GitHubIssue\",\n  \"metadata\": null,\n  \"argumentDefinitions\": [],\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"id\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"number\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"title\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"body\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"createdAt\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"author\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": null,\n      \"plural\": false,\n      \"selections\": [\n        (v0/*: any*/),\n        (v1/*: any*/)\n      ]\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"updatedAt\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"assignees\",\n      \"storageKey\": \"assignees(first:10)\",\n      \"args\": [\n        {\n          \"kind\": \"Literal\",\n          \"name\": \"first\",\n          \"value\": 10\n        }\n      ],\n      \"concreteType\": \"GitHubUserConnection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"nodes\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"GitHubUser\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"name\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            (v0/*: any*/),\n            (v1/*: any*/)\n          ]\n        }\n      ]\n    },\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"reactionGroups\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"GitHubReactionGroup\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"kind\": \"ScalarField\",\n          \"alias\": null,\n          \"name\": \"content\",\n          \"args\": null,\n          \"storageKey\": null\n        },\n        {\n          \"kind\": \"ScalarField\",\n          \"alias\": null,\n          \"name\": \"viewerHasReacted\",\n          \"args\": null,\n          \"storageKey\": null\n        },\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"users\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"GitHubReactingUserConnection\",\n          \"plural\": false,\n          \"selections\": (v2/*: any*/)\n        }\n      ]\n    },\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"comments\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"GitHubIssueCommentConnection\",\n      \"plural\": false,\n      \"selections\": (v2/*: any*/)\n    }\n  ]\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '3e300d95432ddef7c1f17630a2a88264';\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\ntype Post_post$ref = any;\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type Posts_repository$ref: FragmentReference;\ndeclare export opaque type Posts_repository$fragmentType: Posts_repository$ref;\nexport type Posts_repository = {|\n  +issues: {|\n    +edges: ?$ReadOnlyArray<?{|\n      +node: ?{|\n        +id: string,\n        +$fragmentRefs: Post_post$ref,\n      |}\n    |}>\n  |},\n  +$refType: Posts_repository$ref,\n|};\nexport type Posts_repository$data = Posts_repository;\nexport type Posts_repository$key = {\n  +$data?: Posts_repository$data,\n  +$fragmentRefs: Posts_repository$ref,\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"kind\": \"Fragment\",\n  \"name\": \"Posts_repository\",\n  \"type\": \"GitHubRepository\",\n  \"metadata\": {\n    \"connection\": [\n      {\n        \"count\": \"count\",\n        \"cursor\": \"cursor\",\n        \"direction\": \"forward\",\n        \"path\": [\n          \"issues\"\n        ]\n      }\n    ]\n  },\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"count\",\n      \"type\": \"Int\",\n      \"defaultValue\": 10\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"cursor\",\n      \"type\": \"String\",\n      \"defaultValue\": null\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"orderBy\",\n      \"type\": \"GitHubIssueOrder\",\n      \"defaultValue\": {\n        \"direction\": \"DESC\",\n        \"field\": \"CREATED_AT\"\n      }\n    }\n  ],\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": \"issues\",\n      \"name\": \"__Posts_posts_issues_connection\",\n      \"storageKey\": null,\n      \"args\": [\n        {\n          \"kind\": \"Literal\",\n          \"name\": \"labels\",\n          \"value\": [\n            \"publish\"\n          ]\n        },\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"orderBy\",\n          \"variableName\": \"orderBy\"\n        }\n      ],\n      \"concreteType\": \"GitHubIssueConnection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"edges\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"GitHubIssueEdge\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": null,\n              \"name\": \"node\",\n              \"storageKey\": null,\n              \"args\": null,\n              \"concreteType\": \"GitHubIssue\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"kind\": \"ScalarField\",\n                  \"alias\": null,\n                  \"name\": \"id\",\n                  \"args\": null,\n                  \"storageKey\": null\n                },\n                {\n                  \"kind\": \"ScalarField\",\n                  \"alias\": null,\n                  \"name\": \"__typename\",\n                  \"args\": null,\n                  \"storageKey\": null\n                },\n                {\n                  \"kind\": \"FragmentSpread\",\n                  \"name\": \"Post_post\",\n                  \"args\": null\n                }\n              ]\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"cursor\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        },\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"pageInfo\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"GitHubPageInfo\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"endCursor\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"hasNextPage\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        }\n      ]\n    }\n  ]\n};\n// prettier-ignore\n(node/*: any*/).hash = '2c3d40f990b05f9138cf469446bd1e6d';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash d008929cea55444ebbab67bc287b543b\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype Posts_repository$ref = any;\nexport type GitHubIssueOrderField = \"COMMENTS\" | \"CREATED_AT\" | \"UPDATED_AT\" | \"%future added value\";\nexport type GitHubOrderDirection = \"ASC\" | \"DESC\" | \"%future added value\";\nexport type GitHubIssueOrder = {|\n  direction: GitHubOrderDirection,\n  field: GitHubIssueOrderField,\n|};\nexport type PostsPaginationQueryVariables = {|\n  count: number,\n  cursor?: ?string,\n  orderBy?: ?GitHubIssueOrder,\n|};\nexport type PostsPaginationQueryResponse = {|\n  +gitHub: ?{|\n    +repository: ?{|\n      +__typename: string,\n      +$fragmentRefs: Posts_repository$ref,\n    |}\n  |}\n|};\nexport type PostsPaginationQuery = {|\n  variables: PostsPaginationQueryVariables,\n  response: PostsPaginationQueryResponse,\n|};\n*/\n\n\n/*\nquery PostsPaginationQuery(\n  $count: Int!\n  $cursor: String\n  $orderBy: GitHubIssueOrder\n) @persistedQueryConfiguration(accessToken: {environmentVariable: \"OG_GITHUB_TOKEN\"}) {\n  gitHub {\n    repository(name: \"onegraph-changelog\", owner: \"onegraph\") {\n      __typename\n      ...Posts_repository_32czeo\n      id\n    }\n  }\n}\n\nfragment Posts_repository_32czeo on GitHubRepository {\n  issues(first: $count, after: $cursor, orderBy: $orderBy, labels: [\"publish\"]) {\n    edges {\n      node {\n        id\n        ...Post_post\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment Post_post on GitHubIssue {\n  id\n  number\n  title\n  body\n  createdAt\n  author {\n    __typename\n    login\n    avatarUrl\n    ... on GitHubUser {\n      id\n    }\n    ... on GitHubMannequin {\n      id\n    }\n    ... on GitHubOrganization {\n      id\n    }\n    ... on GitHubBot {\n      id\n    }\n  }\n  updatedAt\n  assignees(first: 10) {\n    nodes {\n      name\n      login\n      avatarUrl\n      id\n    }\n  }\n  reactionGroups {\n    content\n    viewerHasReacted\n    users {\n      totalCount\n    }\n  }\n  comments {\n    totalCount\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"count\",\n    \"type\": \"Int!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"cursor\",\n    \"type\": \"String\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"orderBy\",\n    \"type\": \"GitHubIssueOrder\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"name\",\n    \"value\": \"onegraph-changelog\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"owner\",\n    \"value\": \"onegraph\"\n  }\n],\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"__typename\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv3 = {\n  \"kind\": \"Variable\",\n  \"name\": \"orderBy\",\n  \"variableName\": \"orderBy\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"after\",\n    \"variableName\": \"cursor\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"first\",\n    \"variableName\": \"count\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"labels\",\n    \"value\": [\n      \"publish\"\n    ]\n  },\n  (v3/*: any*/)\n],\nv5 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv6 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"login\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv7 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"avatarUrl\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv8 = [\n  (v5/*: any*/)\n],\nv9 = [\n  {\n    \"kind\": \"ScalarField\",\n    \"alias\": null,\n    \"name\": \"totalCount\",\n    \"args\": null,\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"PostsPaginationQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"gitHub\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"GitHubQuery\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"repository\",\n            \"storageKey\": \"repository(name:\\\"onegraph-changelog\\\",owner:\\\"onegraph\\\")\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"GitHubRepository\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"Posts_repository\",\n                \"args\": [\n                  {\n                    \"kind\": \"Variable\",\n                    \"name\": \"count\",\n                    \"variableName\": \"count\"\n                  },\n                  {\n                    \"kind\": \"Variable\",\n                    \"name\": \"cursor\",\n                    \"variableName\": \"cursor\"\n                  },\n                  (v3/*: any*/)\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"PostsPaginationQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"gitHub\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"GitHubQuery\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"repository\",\n            \"storageKey\": \"repository(name:\\\"onegraph-changelog\\\",owner:\\\"onegraph\\\")\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"GitHubRepository\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"issues\",\n                \"storageKey\": null,\n                \"args\": (v4/*: any*/),\n                \"concreteType\": \"GitHubIssueConnection\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"edges\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"GitHubIssueEdge\",\n                    \"plural\": true,\n                    \"selections\": [\n                      {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"node\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"GitHubIssue\",\n                        \"plural\": false,\n                        \"selections\": [\n                          (v5/*: any*/),\n                          {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"number\",\n                            \"args\": null,\n                            \"storageKey\": null\n                          },\n                          {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"title\",\n                            \"args\": null,\n                            \"storageKey\": null\n                          },\n                          {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"body\",\n                            \"args\": null,\n                            \"storageKey\": null\n                          },\n                          {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"createdAt\",\n                            \"args\": null,\n                            \"storageKey\": null\n                          },\n                          {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"author\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": null,\n                            \"plural\": false,\n                            \"selections\": [\n                              (v2/*: any*/),\n                              (v6/*: any*/),\n                              (v7/*: any*/),\n                              {\n                                \"kind\": \"InlineFragment\",\n                                \"type\": \"GitHubUser\",\n                                \"selections\": (v8/*: any*/)\n                              },\n                              {\n                                \"kind\": \"InlineFragment\",\n                                \"type\": \"GitHubMannequin\",\n                                \"selections\": (v8/*: any*/)\n                              },\n                              {\n                                \"kind\": \"InlineFragment\",\n                                \"type\": \"GitHubOrganization\",\n                                \"selections\": (v8/*: any*/)\n                              },\n                              {\n                                \"kind\": \"InlineFragment\",\n                                \"type\": \"GitHubBot\",\n                                \"selections\": (v8/*: any*/)\n                              }\n                            ]\n                          },\n                          {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"updatedAt\",\n                            \"args\": null,\n                            \"storageKey\": null\n                          },\n                          {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"assignees\",\n                            \"storageKey\": \"assignees(first:10)\",\n                            \"args\": [\n                              {\n                                \"kind\": \"Literal\",\n                                \"name\": \"first\",\n                                \"value\": 10\n                              }\n                            ],\n                            \"concreteType\": \"GitHubUserConnection\",\n                            \"plural\": false,\n                            \"selections\": [\n                              {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"nodes\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"GitHubUser\",\n                                \"plural\": true,\n                                \"selections\": [\n                                  {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"name\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                  },\n                                  (v6/*: any*/),\n                                  (v7/*: any*/),\n                                  (v5/*: any*/)\n                                ]\n                              }\n                            ]\n                          },\n                          {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"reactionGroups\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"GitHubReactionGroup\",\n                            \"plural\": true,\n                            \"selections\": [\n                              {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"content\",\n                                \"args\": null,\n                                \"storageKey\": null\n                              },\n                              {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"viewerHasReacted\",\n                                \"args\": null,\n                                \"storageKey\": null\n                              },\n                              {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"users\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"GitHubReactingUserConnection\",\n                                \"plural\": false,\n                                \"selections\": (v9/*: any*/)\n                              }\n                            ]\n                          },\n                          {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"comments\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"GitHubIssueCommentConnection\",\n                            \"plural\": false,\n                            \"selections\": (v9/*: any*/)\n                          },\n                          (v2/*: any*/)\n                        ]\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"cursor\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      }\n                    ]\n                  },\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"pageInfo\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"GitHubPageInfo\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"endCursor\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"hasNextPage\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      }\n                    ]\n                  }\n                ]\n              },\n              {\n                \"kind\": \"LinkedHandle\",\n                \"alias\": null,\n                \"name\": \"issues\",\n                \"args\": (v4/*: any*/),\n                \"handle\": \"connection\",\n                \"key\": \"Posts_posts_issues\",\n                \"filters\": [\n                  \"orderBy\",\n                  \"labels\"\n                ]\n              },\n              (v5/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"PostsPaginationQuery\",\n    \"id\": \"544b098f-f07a-4ff9-aaf9-aae78f79acf4\",\n    \"text\": null,\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '5e9134d187035768ad63a6d1c19d821b';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash 53cf7318ebde32a32245267ce58166d2\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype Posts_repository$ref = any;\nexport type App_QueryVariables = {||};\nexport type App_QueryResponse = {|\n  +gitHub: ?{|\n    +repository: ?{|\n      +$fragmentRefs: Posts_repository$ref\n    |}\n  |}\n|};\nexport type App_Query = {|\n  variables: App_QueryVariables,\n  response: App_QueryResponse,\n|};\n*/\n\n\n/*\nquery App_Query @persistedQueryConfiguration(accessToken: {environmentVariable: \"OG_GITHUB_TOKEN\"}) {\n  gitHub {\n    repository(name: \"onegraph-changelog\", owner: \"onegraph\") {\n      ...Posts_repository\n      id\n    }\n  }\n}\n\nfragment Posts_repository on GitHubRepository {\n  issues(first: 10, orderBy: {direction: DESC, field: CREATED_AT}, labels: [\"publish\"]) {\n    edges {\n      node {\n        id\n        ...Post_post\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment Post_post on GitHubIssue {\n  id\n  number\n  title\n  body\n  createdAt\n  author {\n    __typename\n    login\n    avatarUrl\n    ... on GitHubUser {\n      id\n    }\n    ... on GitHubMannequin {\n      id\n    }\n    ... on GitHubOrganization {\n      id\n    }\n    ... on GitHubBot {\n      id\n    }\n  }\n  updatedAt\n  assignees(first: 10) {\n    nodes {\n      name\n      login\n      avatarUrl\n      id\n    }\n  }\n  reactionGroups {\n    content\n    viewerHasReacted\n    users {\n      totalCount\n    }\n  }\n  comments {\n    totalCount\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"name\",\n    \"value\": \"onegraph-changelog\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"owner\",\n    \"value\": \"onegraph\"\n  }\n],\nv1 = {\n  \"kind\": \"Literal\",\n  \"name\": \"first\",\n  \"value\": 10\n},\nv2 = [\n  (v1/*: any*/),\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"labels\",\n    \"value\": [\n      \"publish\"\n    ]\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"orderBy\",\n    \"value\": {\n      \"direction\": \"DESC\",\n      \"field\": \"CREATED_AT\"\n    }\n  }\n],\nv3 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv4 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"__typename\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv5 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"login\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv6 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"avatarUrl\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv7 = [\n  (v3/*: any*/)\n],\nv8 = [\n  {\n    \"kind\": \"ScalarField\",\n    \"alias\": null,\n    \"name\": \"totalCount\",\n    \"args\": null,\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"App_Query\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"gitHub\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"GitHubQuery\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"repository\",\n            \"storageKey\": \"repository(name:\\\"onegraph-changelog\\\",owner:\\\"onegraph\\\")\",\n            \"args\": (v0/*: any*/),\n            \"concreteType\": \"GitHubRepository\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"Posts_repository\",\n                \"args\": null\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"App_Query\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"gitHub\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"GitHubQuery\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"repository\",\n            \"storageKey\": \"repository(name:\\\"onegraph-changelog\\\",owner:\\\"onegraph\\\")\",\n            \"args\": (v0/*: any*/),\n            \"concreteType\": \"GitHubRepository\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"issues\",\n                \"storageKey\": \"issues(first:10,labels:[\\\"publish\\\"],orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"CREATED_AT\\\"})\",\n                \"args\": (v2/*: any*/),\n                \"concreteType\": \"GitHubIssueConnection\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"edges\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"GitHubIssueEdge\",\n                    \"plural\": true,\n                    \"selections\": [\n                      {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"node\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"GitHubIssue\",\n                        \"plural\": false,\n                        \"selections\": [\n                          (v3/*: any*/),\n                          {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"number\",\n                            \"args\": null,\n                            \"storageKey\": null\n                          },\n                          {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"title\",\n                            \"args\": null,\n                            \"storageKey\": null\n                          },\n                          {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"body\",\n                            \"args\": null,\n                            \"storageKey\": null\n                          },\n                          {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"createdAt\",\n                            \"args\": null,\n                            \"storageKey\": null\n                          },\n                          {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"author\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": null,\n                            \"plural\": false,\n                            \"selections\": [\n                              (v4/*: any*/),\n                              (v5/*: any*/),\n                              (v6/*: any*/),\n                              {\n                                \"kind\": \"InlineFragment\",\n                                \"type\": \"GitHubUser\",\n                                \"selections\": (v7/*: any*/)\n                              },\n                              {\n                                \"kind\": \"InlineFragment\",\n                                \"type\": \"GitHubMannequin\",\n                                \"selections\": (v7/*: any*/)\n                              },\n                              {\n                                \"kind\": \"InlineFragment\",\n                                \"type\": \"GitHubOrganization\",\n                                \"selections\": (v7/*: any*/)\n                              },\n                              {\n                                \"kind\": \"InlineFragment\",\n                                \"type\": \"GitHubBot\",\n                                \"selections\": (v7/*: any*/)\n                              }\n                            ]\n                          },\n                          {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"updatedAt\",\n                            \"args\": null,\n                            \"storageKey\": null\n                          },\n                          {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"assignees\",\n                            \"storageKey\": \"assignees(first:10)\",\n                            \"args\": [\n                              (v1/*: any*/)\n                            ],\n                            \"concreteType\": \"GitHubUserConnection\",\n                            \"plural\": false,\n                            \"selections\": [\n                              {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"nodes\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"GitHubUser\",\n                                \"plural\": true,\n                                \"selections\": [\n                                  {\n                                    \"kind\": \"ScalarField\",\n                                    \"alias\": null,\n                                    \"name\": \"name\",\n                                    \"args\": null,\n                                    \"storageKey\": null\n                                  },\n                                  (v5/*: any*/),\n                                  (v6/*: any*/),\n                                  (v3/*: any*/)\n                                ]\n                              }\n                            ]\n                          },\n                          {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"reactionGroups\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"GitHubReactionGroup\",\n                            \"plural\": true,\n                            \"selections\": [\n                              {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"content\",\n                                \"args\": null,\n                                \"storageKey\": null\n                              },\n                              {\n                                \"kind\": \"ScalarField\",\n                                \"alias\": null,\n                                \"name\": \"viewerHasReacted\",\n                                \"args\": null,\n                                \"storageKey\": null\n                              },\n                              {\n                                \"kind\": \"LinkedField\",\n                                \"alias\": null,\n                                \"name\": \"users\",\n                                \"storageKey\": null,\n                                \"args\": null,\n                                \"concreteType\": \"GitHubReactingUserConnection\",\n                                \"plural\": false,\n                                \"selections\": (v8/*: any*/)\n                              }\n                            ]\n                          },\n                          {\n                            \"kind\": \"LinkedField\",\n                            \"alias\": null,\n                            \"name\": \"comments\",\n                            \"storageKey\": null,\n                            \"args\": null,\n                            \"concreteType\": \"GitHubIssueCommentConnection\",\n                            \"plural\": false,\n                            \"selections\": (v8/*: any*/)\n                          },\n                          (v4/*: any*/)\n                        ]\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"cursor\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      }\n                    ]\n                  },\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"pageInfo\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"GitHubPageInfo\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"endCursor\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"hasNextPage\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      }\n                    ]\n                  }\n                ]\n              },\n              {\n                \"kind\": \"LinkedHandle\",\n                \"alias\": null,\n                \"name\": \"issues\",\n                \"args\": (v2/*: any*/),\n                \"handle\": \"connection\",\n                \"key\": \"Posts_posts_issues\",\n                \"filters\": [\n                  \"orderBy\",\n                  \"labels\"\n                ]\n              },\n              (v3/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"App_Query\",\n    \"id\": \"53f7dd5d-fcc0-48cf-b997-ce8d8cfbb477\",\n    \"text\": null,\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '7ac1726fab688549694763c5adcf0979';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash 9120983ae8a6210bab4565fc5f155e89\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype Post_post$ref = any;\nexport type App_Post_QueryVariables = {|\n  issueNumber: number\n|};\nexport type App_Post_QueryResponse = {|\n  +gitHub: ?{|\n    +repository: ?{|\n      +issue: ?{|\n        +$fragmentRefs: Post_post$ref\n      |}\n    |}\n  |}\n|};\nexport type App_Post_Query = {|\n  variables: App_Post_QueryVariables,\n  response: App_Post_QueryResponse,\n|};\n*/\n\n\n/*\nquery App_Post_Query(\n  $issueNumber: Int!\n) @persistedQueryConfiguration(accessToken: {environmentVariable: \"OG_GITHUB_TOKEN\"}) {\n  gitHub {\n    repository(name: \"onegraph-changelog\", owner: \"onegraph\") {\n      issue(number: $issueNumber) {\n        ...Post_post\n        id\n      }\n      id\n    }\n  }\n}\n\nfragment Post_post on GitHubIssue {\n  id\n  number\n  title\n  body\n  createdAt\n  author {\n    __typename\n    login\n    avatarUrl\n    ... on GitHubUser {\n      id\n    }\n    ... on GitHubMannequin {\n      id\n    }\n    ... on GitHubOrganization {\n      id\n    }\n    ... on GitHubBot {\n      id\n    }\n  }\n  updatedAt\n  assignees(first: 10) {\n    nodes {\n      name\n      login\n      avatarUrl\n      id\n    }\n  }\n  reactionGroups {\n    content\n    viewerHasReacted\n    users {\n      totalCount\n    }\n  }\n  comments {\n    totalCount\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"issueNumber\",\n    \"type\": \"Int!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"name\",\n    \"value\": \"onegraph-changelog\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"owner\",\n    \"value\": \"onegraph\"\n  }\n],\nv2 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"number\",\n    \"variableName\": \"issueNumber\"\n  }\n],\nv3 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv4 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"login\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv5 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"avatarUrl\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv6 = [\n  (v3/*: any*/)\n],\nv7 = [\n  {\n    \"kind\": \"ScalarField\",\n    \"alias\": null,\n    \"name\": \"totalCount\",\n    \"args\": null,\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"App_Post_Query\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"gitHub\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"GitHubQuery\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"repository\",\n            \"storageKey\": \"repository(name:\\\"onegraph-changelog\\\",owner:\\\"onegraph\\\")\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"GitHubRepository\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"issue\",\n                \"storageKey\": null,\n                \"args\": (v2/*: any*/),\n                \"concreteType\": \"GitHubIssue\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"FragmentSpread\",\n                    \"name\": \"Post_post\",\n                    \"args\": null\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"App_Post_Query\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"gitHub\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"GitHubQuery\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"repository\",\n            \"storageKey\": \"repository(name:\\\"onegraph-changelog\\\",owner:\\\"onegraph\\\")\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"GitHubRepository\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"issue\",\n                \"storageKey\": null,\n                \"args\": (v2/*: any*/),\n                \"concreteType\": \"GitHubIssue\",\n                \"plural\": false,\n                \"selections\": [\n                  (v3/*: any*/),\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"number\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"title\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"body\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"createdAt\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"author\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"__typename\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      (v4/*: any*/),\n                      (v5/*: any*/),\n                      {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"GitHubUser\",\n                        \"selections\": (v6/*: any*/)\n                      },\n                      {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"GitHubMannequin\",\n                        \"selections\": (v6/*: any*/)\n                      },\n                      {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"GitHubOrganization\",\n                        \"selections\": (v6/*: any*/)\n                      },\n                      {\n                        \"kind\": \"InlineFragment\",\n                        \"type\": \"GitHubBot\",\n                        \"selections\": (v6/*: any*/)\n                      }\n                    ]\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"updatedAt\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"assignees\",\n                    \"storageKey\": \"assignees(first:10)\",\n                    \"args\": [\n                      {\n                        \"kind\": \"Literal\",\n                        \"name\": \"first\",\n                        \"value\": 10\n                      }\n                    ],\n                    \"concreteType\": \"GitHubUserConnection\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"nodes\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"GitHubUser\",\n                        \"plural\": true,\n                        \"selections\": [\n                          {\n                            \"kind\": \"ScalarField\",\n                            \"alias\": null,\n                            \"name\": \"name\",\n                            \"args\": null,\n                            \"storageKey\": null\n                          },\n                          (v4/*: any*/),\n                          (v5/*: any*/),\n                          (v3/*: any*/)\n                        ]\n                      }\n                    ]\n                  },\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"reactionGroups\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"GitHubReactionGroup\",\n                    \"plural\": true,\n                    \"selections\": [\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"content\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"viewerHasReacted\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      {\n                        \"kind\": \"LinkedField\",\n                        \"alias\": null,\n                        \"name\": \"users\",\n                        \"storageKey\": null,\n                        \"args\": null,\n                        \"concreteType\": \"GitHubReactingUserConnection\",\n                        \"plural\": false,\n                        \"selections\": (v7/*: any*/)\n                      }\n                    ]\n                  },\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"comments\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"GitHubIssueCommentConnection\",\n                    \"plural\": false,\n                    \"selections\": (v7/*: any*/)\n                  }\n                ]\n              },\n              (v3/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"App_Post_Query\",\n    \"id\": \"80b64084-033f-460e-962e-c318322e8ee5\",\n    \"text\": null,\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '753183d0fab6064dc2de3df6888f222a';\nmodule.exports = node;\n","// @flow\n\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport style from \"react-syntax-highlighter/dist/esm/styles/hljs/github\";\n\ntype Props = {\n  source: string\n};\n\nclass CodeBlock extends React.PureComponent<{\n  value: string,\n  language: string\n}> {\n  render() {\n    const { language, value } = this.props;\n\n    return (\n      <SyntaxHighlighter style={style} language={language}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default class MarkdownRenderer extends React.PureComponent<Props> {\n  render() {\n    return (\n      <ReactMarkdown\n        source={this.props.source}\n        renderers={{\n          code: CodeBlock\n        }}\n      />\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M12,1.73A10.27,10.27,0,1,0,22.24,12,10.25,10.25,0,0,0,12,1.73ZM21,12a9,9,0,1,1-9-9A9,9,0,0,1,21,12Z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M8.8,11.05a1.55,1.55,0,1,0-1.51-1.5A1.56,1.56,0,0,0,8.8,11.05Z\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M15.44,11.05a1.55,1.55,0,1,0,0-3.09,1.53,1.53,0,0,0-1.51,1.59A1.51,1.51,0,0,0,15.44,11.05Z\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M12.19,16.35A6.58,6.58,0,0,1,6.9,13.5a5.71,5.71,0,0,0,5.3,4,5.54,5.54,0,0,0,5.31-4A6.27,6.27,0,0,1,12.19,16.35Z\"\n});\n\nvar SvgEmojiIcon = function SvgEmojiIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-label\": \"Emoji\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgEmojiIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/emojiIcon.b6ae2989.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  strokeWidth: 2,\n  d: \"M12,22 L12,2 M2,12 L22,12\"\n});\n\nvar SvgAddIcon = function SvgAddIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-label\": \"Add\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgAddIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/addIcon.b773952d.svg\";\nexport { ForwardRef as ReactComponent };","// @flow\n\nimport React from \"react\";\n\nconst GitHubButton = (props: any) => (\n  <button\n    {...props}\n    style={{\n      display: \"block\",\n      border: 0,\n      borderRadius: 3,\n      boxHhadow: \"rgba(0, 0, 0, 0.5) 0px 1px 2px\",\n      color: \"rgb(255, 255, 255)\",\n      cursor: \"pointer\",\n      fontSize: 14,\n      margin: 5,\n      height: \"32px\",\n      background: \"rgb(51, 51, 51)\"\n    }}\n  >\n    <div style={{ alignItems: \"center\", display: \"flex\" }}>\n      <svg\n        fill=\"#ffffff\"\n        role=\"img\"\n        viewBox=\"0 0 24 24\"\n        width=\"16px\"\n        height=\"16px\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"></path>\n      </svg>\n      <span style={{ marginLeft: 5 }}>Login with GitHub</span>\n    </div>\n  </button>\n);\n\nexport default GitHubButton;\n","// @flow\n\nimport * as React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport {\n  createFragmentContainer,\n  commitMutation,\n  fetchQuery,\n  type RelayProp\n} from \"react-relay\";\nimport MarkdownRenderer from \"./MarkdownRenderer\";\nimport formatDate from \"date-fns/format\";\n// $FlowFixMe: https://facebook.github.io/create-react-app/docs/adding-images-fonts-and-files\nimport { ReactComponent as EmojiIcon } from \"./emojiIcon.svg\";\n// $FlowFixMe: https://facebook.github.io/create-react-app/docs/adding-images-fonts-and-files\nimport { ReactComponent as AddIcon } from \"./addIcon.svg\";\nimport Tippy from \"@tippy.js/react\";\nimport \"tippy.js/themes/light-border.css\";\nimport { Link } from \"react-router-dom\";\nimport { postRootQuery } from \"./App\";\nimport GitHubLoginButton from \"./GitHubLoginButton\";\nimport { NotificationManager } from \"react-notifications\";\nimport { Box, Heading, Text } from \"grommet\";\n\nimport type { Post_post } from \"./__generated__/Post_post.graphql\";\n\nconst addReactionMutation = graphql`\n  mutation Post_AddReactionMutation($input: GitHubAddReactionInput!) {\n    gitHub {\n      addReaction(input: $input) {\n        reaction {\n          content\n          user {\n            login\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst removeReactionMutation = graphql`\n  mutation Post_RemoveReactionMutation($input: GitHubRemoveReactionInput!) {\n    gitHub {\n      removeReaction(input: $input) {\n        reaction {\n          content\n          user {\n            login\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction reactionUpdater({ store, viewerHasReacted, postId, content }) {\n  const reactionGroup = store\n    .get(postId)\n    .getLinkedRecords(\"reactionGroups\")\n    .find(r => r.getValue(\"content\") === content);\n  reactionGroup.setValue(viewerHasReacted, \"viewerHasReacted\");\n  const users = reactionGroup.getLinkedRecord(\"users\");\n  users.setValue(\n    Math.max(0, users.getValue(\"totalCount\") + (viewerHasReacted ? 1 : -1)),\n    \"totalCount\"\n  );\n}\n\nasync function addReaction({ environment, content, postId }) {\n  const variables = {\n    input: {\n      content,\n      subjectId: postId\n    }\n  };\n  return new Promise((resolve, reject) => {\n    commitMutation(environment, {\n      mutation: addReactionMutation,\n      variables,\n      onCompleted: (response, errors) => resolve({ response, errors }),\n      onError: err => reject(err),\n      optimisticUpdater: store =>\n        reactionUpdater({ store, viewerHasReacted: true, content, postId }),\n      updater: (store, data) =>\n        reactionUpdater({ store, viewerHasReacted: true, content, postId })\n    });\n  });\n}\n\nasync function removeReaction({ environment, content, postId }) {\n  const variables = {\n    input: {\n      content,\n      subjectId: postId\n    }\n  };\n  return new Promise((resolve, reject) => {\n    commitMutation(environment, {\n      mutation: removeReactionMutation,\n      variables,\n      onCompleted: (response, errors) => resolve({ response, errors }),\n      onError: err => reject(err),\n      optimisticUpdater: store =>\n        reactionUpdater({ store, viewerHasReacted: false, content, postId }),\n      updater: (store, data) =>\n        reactionUpdater({ store, viewerHasReacted: false, content, postId })\n    });\n  });\n}\n\nfunction emojiForContent(content) {\n  switch (content) {\n    case \"THUMBS_UP\":\n      return \"👍\";\n    case \"THUMBS_DOWN\":\n      return \"👎\";\n    case \"LAUGH\":\n      return \"😄\";\n    case \"HOORAY\":\n      return \"🎉\";\n    case \"CONFUSED\":\n      return \"😕\";\n    case \"HEART\":\n      return \"❤️\";\n    case \"ROCKET\":\n      return \"🚀\";\n    case \"EYES\":\n      return \"👀\";\n    default:\n      return null;\n  }\n}\n\nconst reactions = [\n  \"THUMBS_UP\",\n  \"THUMBS_DOWN\",\n  \"LAUGH\",\n  \"HOORAY\",\n  \"CONFUSED\",\n  \"HEART\",\n  \"ROCKET\",\n  \"EYES\"\n];\n\nconst EmojiPicker = ({\n  viewerReactions,\n  onSelect,\n  onDeselect,\n  isLoggedIn,\n  login\n}) => {\n  const reactionContent = reaction => {\n    const isSelected = viewerReactions.includes(reaction);\n    return (\n      <button\n        style={{\n          cursor: \"pointer\",\n          outline: \"none\",\n          fontSize: 20,\n          padding: \"0 5px\",\n          backgroundColor: isSelected ? \"#ddefff\" : \"\",\n          border: isSelected ? \"1px solid #e1e4e8\" : \"1px solid transparent\"\n        }}\n        key={reaction}\n        onClick={() => (isSelected ? onDeselect(reaction) : onSelect(reaction))}\n      >\n        <span role=\"img\">{emojiForContent(reaction)}</span>\n      </button>\n    );\n  };\n  return (\n    <>\n      <p style={{ textAlign: \"left\", margin: \"5px 0 0\" }}>Pick your reaction</p>\n      <div style={{ height: 1, background: \"#ddd\", margin: \"5px 0\" }} />\n      {isLoggedIn ? (\n        <>\n          <div>\n            {reactions.slice(0, 4).map(reaction => reactionContent(reaction))}\n          </div>\n          <div>\n            {reactions.slice(4).map(reaction => reactionContent(reaction))}\n          </div>\n        </>\n      ) : (\n        <GitHubLoginButton onClick={login} />\n      )}\n    </>\n  );\n};\n\ntype Props = {\n  relay: RelayProp,\n  isLoggedIn: boolean,\n  post: Post_post,\n  login: any,\n  logout: any\n};\n\nfunction PostBox({ children }: { children: React.Node }) {\n  return (\n    <Box\n      margin=\"medium\"\n      style={{\n        maxWidth: 704,\n        borderRadius: 2,\n        boxShadow: \"0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0,0,0,0.2)\"\n      }}\n    >\n      {children}\n    </Box>\n  );\n}\n\nconst Post = ({ relay, post, isLoggedIn, login, logout }: Props) => {\n  const [showReactionPopover, setShowReactionPopover] = React.useState(false);\n  const popoverInstance = React.useRef();\n\n  const usedReactions = (post.reactionGroups || []).filter(\n    g => g.users.totalCount > 0\n  );\n  const authors = post.assignees.nodes || [];\n  return (\n    <PostBox>\n      <Box pad=\"medium\">\n        <Heading level={3} margin=\"none\">\n          <Link\n            style={{ color: \"inherit\" }}\n            to={`/post/${post.number}`}\n            onMouseOver={() =>\n              fetchQuery(relay.environment, postRootQuery, {\n                issueNumber: post.number\n              })\n            }\n          >\n            {post.title}\n          </Link>\n        </Heading>\n\n        <Text size=\"xsmall\">\n          {formatDate(new Date(post.createdAt), \"MMM Do, YYYY\")}\n        </Text>\n        <Text size=\"small\">\n          <MarkdownRenderer source={post.body} />\n        </Text>\n      </Box>\n      {authors.length > 0 ? (\n        //style={{ borderTop: \"1px solid rgba(0,0,0,0.12)\", padding: 16 }}>\n        <Box\n          pad=\"medium\"\n          border={{ size: \"xsmall\", side: \"top\", color: \"rgba(0,0,0,0.1)\" }}\n        >\n          {authors.map(node =>\n            node ? (\n              <Box align=\"center\" direction=\"row\">\n                <img\n                  alt={node.name}\n                  src={node.avatarUrl}\n                  style={{\n                    width: 36,\n                    height: 36,\n                    borderRadius: \"50%\",\n                    marginRight: 8\n                  }}\n                />\n                <Text size=\"small\">{node.name}</Text>\n              </Box>\n            ) : null\n          )}\n        </Box>\n      ) : null}\n      <Box\n        pad=\"xsmall\"\n        direction=\"row\"\n        wrap={true}\n        border={{ size: \"xsmall\", side: \"top\", color: \"rgba(0,0,0,0.1)\" }}\n      >\n        {usedReactions.map(g => (\n          <Text\n            style={{\n              padding: \"0 16px\",\n              borderRight: \"1px solid rgba(0,0,0,0.12)\",\n              display: \"flex\",\n              alignItems: \"center\"\n            }}\n          >\n            {emojiForContent(g.content)}{\" \"}\n            <Text size=\"small\" style={{ marginLeft: 8 }}>\n              {g.users.totalCount}\n            </Text>\n          </Text>\n        ))}\n        <Tippy\n          onCreate={instance => (popoverInstance.current = instance)}\n          arrow={true}\n          trigger=\"click\"\n          theme=\"light-border\"\n          inertia={true}\n          interactive={true}\n          animateFill={false}\n          interactiveBorder={10}\n          duration={[300, 75]}\n          content={\n            <div>\n              <EmojiPicker\n                isLoggedIn={isLoggedIn}\n                login={login}\n                viewerReactions={usedReactions\n                  .filter(x => x.viewerHasReacted)\n                  .map(x => x.content)}\n                onDeselect={async content => {\n                  popoverInstance.current && popoverInstance.current.hide();\n                  try {\n                    await removeReaction({\n                      environment: relay.environment,\n                      content,\n                      postId: post.id\n                    });\n                  } catch (e) {\n                    NotificationManager.error(\"Error removing reaction.\");\n                  }\n                }}\n                onSelect={async content => {\n                  popoverInstance.current && popoverInstance.current.hide();\n                  try {\n                    await addReaction({\n                      environment: relay.environment,\n                      content,\n                      postId: post.id\n                    });\n                  } catch (e) {\n                    NotificationManager.error(\"Error adding reaction.\");\n                  }\n                }}\n              />\n            </div>\n          }\n        >\n          <span\n            style={{ padding: \"8px 16px\" }}\n            className=\"add-reaction-emoji\"\n            onClick={() => setShowReactionPopover(!showReactionPopover)}\n          >\n            <AddIcon width=\"12\" />\n            <EmojiIcon width=\"24\" style={{ stroke: \"rgba(0,0,0,0)\" }} />\n          </span>\n        </Tippy>\n      </Box>\n    </PostBox>\n  );\n};\n\nexport default createFragmentContainer(Post, {\n  post: graphql`\n    fragment Post_post on GitHubIssue {\n      id\n      number\n      title\n      body\n      createdAt\n      author {\n        login\n        avatarUrl\n      }\n      updatedAt\n      assignees(first: 10) {\n        nodes {\n          name\n          login\n          avatarUrl\n        }\n      }\n      reactionGroups {\n        content\n        viewerHasReacted\n        users {\n          totalCount\n        }\n      }\n      comments {\n        totalCount\n      }\n    }\n  `\n});\n\nconst WORDS = [\n  \"people\",\n  \"see\",\n  \"one\",\n  \"make\",\n  \"day\",\n  \"it’s\",\n  \"man\",\n  \"old\",\n  \"out\",\n  \"dog\",\n  \"guy\",\n  \"new\",\n  \"video\",\n  \"things\",\n  \"life\",\n  \"made\",\n  \"year\",\n  \"never\",\n  \"facebook\",\n  \"awesome\",\n  \"girl\",\n  \"look\",\n  \"photos\",\n  \"love\",\n  \"know\",\n  \"best\",\n  \"way\",\n  \"thing\",\n  \"beautiful\",\n  \"time\",\n  \"little\",\n  \"more\",\n  \"first\",\n  \"happened\",\n  \"heart\",\n  \"now\",\n  \"you’ll\",\n  \"being\",\n  \"ways\",\n  \"want\",\n  \"think\",\n  \"something\",\n  \"years\",\n  \"found\",\n  \"better\",\n  \"seen\",\n  \"baby\",\n  \"really\",\n  \"world\",\n  \"actually\",\n  \"valentine’s\",\n  \"down\",\n  \"reasons\",\n  \"watch\",\n  \"need\",\n  \"here\",\n  \"good\",\n  \"media\",\n  \"makes\",\n  \"boy\",\n  \"mind\",\n  \"right\",\n  \"social\"\n];\n\nfunction randInt(x: number): number {\n  return Math.floor(Math.random() * x);\n}\n\nfunction randomWord() {\n  return WORDS[randInt(WORDS.length)];\n}\n\nfunction capitalize(s: string): string {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\nexport class LoadingPost extends React.PureComponent<*, *> {\n  render() {\n    return (\n      <PostBox>\n        <Box pad=\"medium\" style={{ filter: \"blur(4px)\" }} className=\"shimmer\">\n          <Heading level={3} margin=\"none\">\n            {capitalize(randomWord())}{\" \"}\n            {[...new Array(randInt(5) + 2)].map(_x => randomWord()).join(\" \")}\n          </Heading>\n          <Text size=\"xsmall\">{formatDate(new Date(), \"MMM Do, YYYY\")}</Text>\n          <Text size=\"small\">\n            <MarkdownRenderer\n              source={[...new Array(randInt(5) + 1)]\n                .map(_p =>\n                  [...new Array(randInt(200) + 25)]\n                    .map(_w => randomWord())\n                    .join(\" \")\n                )\n                .join(\"\\n\\n\")}\n              escapeHtml={false}\n            />\n          </Text>\n        </Box>\n      </PostBox>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"circle\", {\n  cx: 50,\n  cy: 50,\n  fill: \"none\",\n  stroke: \"#82bbe4\",\n  strokeWidth: 8,\n  r: 24,\n  strokeDasharray: \"112 40\",\n  transform: \"rotate(138.553 50 50)\"\n}, React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  calcMode: \"linear\",\n  values: \"0 50 50;360 50 50\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  begin: \"0s\",\n  repeatCount: \"indefinite\"\n}));\n\nvar SvgLoadingSpinner = function SvgLoadingSpinner(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    style: {\n      background: \"none\"\n    },\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLoadingSpinner, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/loadingSpinner.c5a86d65.svg\";\nexport { ForwardRef as ReactComponent };","// @flow\n\nimport React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { createPaginationContainer, type RelayProp } from \"react-relay\";\nimport Post from \"./Post\";\nimport type { Posts_repository } from \"./__generated__/Posts_repository.graphql\";\n// $FlowFixMe: https://facebook.github.io/create-react-app/docs/adding-images-fonts-and-files\nimport { ReactComponent as LoadingSpinner } from \"./loadingSpinner.svg\";\nimport idx from \"idx.macro\";\nimport { Box } from \"grommet\";\n\ntype Props = {|\n  relay: RelayProp,\n  repository: Posts_repository,\n  isLoggedIn: boolean,\n  login: any,\n  logout: any\n|};\n\n// TODO: pagination. Can do pages or infinite scroll\nconst Posts = ({ relay, repository, isLoggedIn, login, logout }: Props) => {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const scheduledRef = React.useRef(false);\n  const handleScroll = React.useCallback(() => {\n    if (!scheduledRef.current) {\n      scheduledRef.current = true;\n      window.requestAnimationFrame(() => {\n        scheduledRef.current = false;\n        if (\n          window.innerHeight +\n            idx(document, _ => _.documentElement.scrollTop) >=\n          idx(document, _ => _.documentElement.offsetHeight) - 500\n        ) {\n          if (!isLoading && !relay.isLoading() && relay.hasMore()) {\n            setIsLoading(true);\n            console.log(\"setting isLoading to true\");\n            relay.loadMore(10, x => {\n              console.log(\"setting isLoading to false\", x);\n              setIsLoading(false);\n            });\n          }\n        }\n      });\n    }\n  }, [relay, isLoading, setIsLoading]);\n  React.useEffect(() => {\n    console.log(\"adding new listener\");\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      console.log(\"remove listener\");\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return (\n    <Box>\n      {(repository.issues.edges || []).map(e =>\n        e && e.node ? (\n          <Post\n            key={e.node.id}\n            post={e.node}\n            isLoggedIn={isLoggedIn}\n            login={login}\n            logout={logout}\n          />\n        ) : null\n      )}\n      {isLoading ? (\n        <Box\n          align=\"center\"\n          margin=\"medium\"\n          style={{\n            maxWidth: 704\n          }}\n        >\n          <LoadingSpinner width=\"48px\" height=\"48px\" />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default createPaginationContainer(\n  Posts,\n  {\n    repository: graphql`\n      fragment Posts_repository on GitHubRepository\n        @argumentDefinitions(\n          count: { type: \"Int\", defaultValue: 10 }\n          cursor: { type: \"String\" }\n          orderBy: {\n            type: \"GitHubIssueOrder\"\n            defaultValue: { direction: DESC, field: CREATED_AT }\n          }\n        ) {\n        issues(\n          first: $count\n          after: $cursor\n          orderBy: $orderBy\n          labels: [\"publish\"]\n        ) @connection(key: \"Posts_posts_issues\") {\n          edges {\n            node {\n              id\n              ...Post_post\n            }\n          }\n        }\n      }\n    `\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      // XXX How to get the refetch query to work?\n      return props.repository && props.repository.issues;\n    },\n    getVariables(props, { count, cursor }, fragmentVariables) {\n      return {\n        count: count,\n        cursor,\n        orderBy: fragmentVariables.orderBy\n      };\n    },\n\n    query: graphql`\n      query PostsPaginationQuery(\n        $count: Int!\n        $cursor: String\n        $orderBy: GitHubIssueOrder\n      )\n        @persistedQueryConfiguration(\n          accessToken: { environmentVariable: \"OG_GITHUB_TOKEN\" }\n        ) {\n        gitHub {\n          repository(name: \"onegraph-changelog\", owner: \"onegraph\") {\n            __typename\n            ...Posts_repository\n              @arguments(count: $count, cursor: $cursor, orderBy: $orderBy)\n          }\n        }\n      }\n    `\n  }\n);\n","// @flow\n\nimport stableCopy from \"relay-runtime/lib/stableCopy\";\n\nimport type { Variables } from \"relay-runtime/lib/RelayRuntimeTypes\";\nimport type { GraphQLResponse } from \"relay-runtime/lib/RelayNetworkTypes\";\n\ntype Response = {\n  fetchTime: number,\n  payload: Promise<GraphQLResponse>\n};\n\n/**\n * A cache for storing query responses, featuring:\n * - `get` with TTL\n * - cache size limiting, with least-recently *updated* entries purged first\n */\nexport default class RelayQueryResponseCache {\n  _responses: Map<string, Response>;\n  _size: number;\n  _ttl: number;\n\n  constructor({ size, ttl }: { size: number, ttl: number }) {\n    this._responses = new Map();\n    this._size = Math.max(1, size);\n    this._ttl = Math.max(1, ttl);\n  }\n\n  clear(): void {\n    this._responses.clear();\n  }\n\n  get(queryID: string, variables: Variables): ?Promise<GraphQLResponse> {\n    const cacheKey = getCacheKey(queryID, variables);\n    this._responses.forEach((response, key) => {\n      if (!isCurrent(response.fetchTime, this._ttl)) {\n        this._responses.delete(key);\n      }\n    });\n    const response = this._responses.get(cacheKey);\n    return response != null\n      ? response.payload.then(\n          payload =>\n            ({\n              ...payload,\n              extensions: {\n                ...payload.extensions,\n                cacheTimestamp: response.fetchTime\n              }\n            }: GraphQLResponse)\n        )\n      : null;\n  }\n\n  set(\n    queryID: string,\n    variables: Variables,\n    payload: Promise<GraphQLResponse>\n  ): void {\n    const fetchTime = Date.now();\n    const cacheKey = getCacheKey(queryID, variables);\n    this._responses.delete(cacheKey); // deletion resets key ordering\n    this._responses.set(cacheKey, {\n      fetchTime,\n      payload\n    });\n    // Purge least-recently updated key when max size reached\n    if (this._responses.size > this._size) {\n      const firstKey = this._responses.keys().next();\n      if (!firstKey.done) {\n        this._responses.delete(firstKey.value);\n      }\n    }\n  }\n}\n\nfunction getCacheKey(queryID: string, variables: Variables): string {\n  return JSON.stringify(stableCopy({ queryID, variables }));\n}\n\n/**\n * Determine whether a response fetched at `fetchTime` is still valid given\n * some `ttl`.\n */\nfunction isCurrent(fetchTime: number, ttl: number): boolean {\n  return fetchTime + ttl >= Date.now();\n}\n","// @flow\n\nimport { Environment, Network, RecordSource, Store } from \"relay-runtime\";\nimport RelayQueryResponseCache from \"./relayResponseCache\";\n\nimport OneGraphAuth from \"onegraph-auth\";\n\nconst ONEGRAPH_APP_ID = \"570a3d6b-6ff3-4b7a-9b0d-fe4cf6384388\";\n\nexport const onegraphAuth = new OneGraphAuth({\n  appId: ONEGRAPH_APP_ID,\n  communicationMode: \"post_message\"\n});\n\nconst cache = new RelayQueryResponseCache({ size: 250, ttl: 1000 * 60 * 10 });\n\nfunction fetchQuery(operation, variables, cacheConfig) {\n  const queryId = operation.id || operation.text;\n  const forceFetch = cacheConfig && cacheConfig.force;\n  const fromCache = cache.get(queryId, variables);\n  const isMutation = operation.operationKind === \"mutation\";\n  const isQuery = operation.operationKind === \"query\";\n\n  if (isQuery && fromCache !== null && !forceFetch) {\n    console.log(\"fromCache\", fromCache);\n    return fromCache;\n  }\n\n  const resp = fetch(\n    \"https://serve.onegraph.com/graphql?app_id=\" + ONEGRAPH_APP_ID,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        ...onegraphAuth.authHeaders()\n      },\n      body: JSON.stringify({\n        doc_id: operation.id,\n        query: operation.text,\n        variables\n      })\n    }\n  ).then(response =>\n    response.json().then(json => {\n      // Clear full cache on mutation or if we get an error\n      if (isMutation || !json.data || !json.data.gitHub) {\n        cache.clear();\n      }\n      if (json.data.gitHub == null) {\n        return {\n          ...json,\n          data: null\n        };\n      }\n      return json;\n    })\n  );\n\n  // TODO: clear auth on 401\n  if (isQuery) {\n    cache.set(queryId, variables, resp);\n  }\n  return resp;\n}\n\nexport const environment = new Environment({\n  network: Network.create(fetchQuery),\n  store: new Store(new RecordSource())\n});\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M12.9932 32.7178L59.6621 5.7735L106.331 32.7178V86.6065L59.6621 113.551L12.9932 86.6065V32.7178Z\",\n  transform: \"translate(0 103.338) rotate(-60)\",\n  stroke: \"black\",\n  strokeWidth: 10\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M24.9835 8.28856L7.21212 18.5005V38.9243L24.9835 49.1363L42.7549 38.9243V31.5836H49.967V43.0686L24.9835 57.4248L0 43.0686V14.3562L24.9835 0L49.967 14.3562L42.7549 18.5005L24.9835 8.28856Z\",\n  transform: \"translate(56.6792 52.9501)\",\n  fill: \"black\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  width: 24.8818,\n  height: 7.89591,\n  transform: \"translate(81.6626 79.1502)\",\n  fill: \"black\"\n});\n\nvar SvgOneGraphLogo = function SvgOneGraphLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 163,\n    height: 163,\n    viewBox: \"0 0 163 163\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgOneGraphLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/oneGraphLogo.520245d7.svg\";\nexport { ForwardRef as ReactComponent };","// @flow\n\nimport React from \"react\";\nimport \"./App.css\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { QueryRenderer, fetchQuery } from \"react-relay\";\nimport Posts from \"./Posts\";\nimport Post, { LoadingPost } from \"./Post\";\nimport { environment, onegraphAuth } from \"./Environment\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport idx from \"idx.macro\";\nimport \"react-notifications/lib/notifications.css\";\nimport { NotificationContainer } from \"react-notifications\";\n// $FlowFixMe: https://facebook.github.io/create-react-app/docs/adding-images-fonts-and-files\nimport { ReactComponent as OneGraphLogo } from \"./oneGraphLogo.svg\";\nimport { Grommet, Grid, Box, Heading, Text, Anchor } from \"grommet\";\nimport ScrollMemory from \"react-router-scroll-memory\";\n\nimport type { App_ViewerQueryResponse } from \"./__generated__/App_Query.graphql\";\n\nconst theme = {\n  global: {\n    font: {\n      family: \"Helvetica,Arial,sans-serif\",\n      size: \"14px\",\n      height: \"20px\"\n    }\n  }\n};\n\nconst postsRootQuery = graphql`\n  query App_Query\n    @persistedQueryConfiguration(\n      accessToken: { environmentVariable: \"OG_GITHUB_TOKEN\" }\n    ) {\n    gitHub {\n      repository(name: \"onegraph-changelog\", owner: \"onegraph\") {\n        ...Posts_repository\n      }\n    }\n  }\n`;\n\nif (window.location.pathname === \"/\") {\n  // Prep cache\n  fetchQuery(environment, postsRootQuery, {});\n}\n\nconst PostsRoot = ({\n  isLoggedIn,\n  login,\n  logout\n}: {\n  isLoggedIn: boolean,\n  login: any,\n  logout: any\n}) => {\n  return (\n    <QueryRenderer\n      environment={environment}\n      query={postsRootQuery}\n      variables={{}}\n      render={({\n        error,\n        props\n      }: {\n        error: ?Error,\n        props: ?App_ViewerQueryResponse\n      }) => {\n        if (error) {\n          // XXX: better errors\n          return <div>Error!</div>;\n        }\n        if (!props) {\n          return (\n            <>\n              <LoadingPost />\n              <LoadingPost />\n              <LoadingPost />\n              <LoadingPost />\n              <LoadingPost />\n            </>\n          );\n        }\n        const respository = props.gitHub ? props.gitHub.repository : null;\n        if (!respository) {\n          // XXX: better errors\n          return <div>repository not found</div>;\n        } else {\n          return (\n            <Posts\n              repository={respository}\n              isLoggedIn={isLoggedIn}\n              login={login}\n              logout={logout}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport const postRootQuery = graphql`\n  query App_Post_Query($issueNumber: Int!)\n    @persistedQueryConfiguration(\n      accessToken: { environmentVariable: \"OG_GITHUB_TOKEN\" }\n    ) {\n    gitHub {\n      repository(name: \"onegraph-changelog\", owner: \"onegraph\") {\n        issue(number: $issueNumber) {\n          ...Post_post\n        }\n      }\n    }\n  }\n`;\n\nconst PostRoot = ({\n  isLoggedIn,\n  login,\n  logout,\n  issueNumber\n}: {\n  isLoggedIn: boolean,\n  login: any,\n  logout: any,\n  issueNumber: number\n}) => {\n  return (\n    <QueryRenderer\n      environment={environment}\n      query={postRootQuery}\n      variables={{ issueNumber: issueNumber }}\n      render={({\n        error,\n        props\n      }: {\n        error: ?Error,\n        props: ?App_ViewerQueryResponse\n      }) => {\n        if (error) {\n          return <div>Error!</div>;\n        }\n        if (!props) {\n          return <LoadingPost />;\n        }\n        const post = idx(props, _ => _.gitHub.repository.issue);\n        if (!post) {\n          // XXX: better errors\n          return <div>Post not found</div>;\n        } else {\n          return (\n            <Post\n              post={post}\n              isLoggedIn={isLoggedIn}\n              login={login}\n              logout={logout}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default class App extends React.Component<*, { isLoggedIn: boolean }> {\n  state = {\n    isLoggedIn: false\n  };\n  componentDidMount() {\n    onegraphAuth\n      .isLoggedIn(\"github\")\n      .then(isLoggedIn => this.setState({ isLoggedIn }));\n  }\n  _login = () => {\n    onegraphAuth\n      .login(\"github\")\n      .then(() =>\n        onegraphAuth\n          .isLoggedIn(\"github\")\n          .then(isLoggedIn => this.setState({ isLoggedIn }))\n      );\n  };\n  _logout = () => {\n    onegraphAuth\n      .logout(\"github\")\n      .then(() =>\n        onegraphAuth\n          .isLoggedIn(\"github\")\n          .then(isLoggedIn => this.setState({ isLoggedIn }))\n      );\n  };\n  render() {\n    return (\n      <Router>\n        <Grommet theme={theme}>\n          <Grid\n            fill\n            rows={[\"auto\", \"flex\"]}\n            columns={[\"flex\"]}\n            areas={[\n              { name: \"header\", start: [0, 0], end: [1, 0] },\n              { name: \"main\", start: [0, 1], end: [1, 1] }\n            ]}\n          >\n            <Box\n              gridArea=\"header\"\n              direction=\"row\"\n              align=\"center\"\n              justify=\"between\"\n              pad={{ horizontal: \"medium\", vertical: \"medium\" }}\n            >\n              <Box align=\"center\" direction=\"row\">\n                <OneGraphLogo width=\"96px\" height=\"96px\" />{\" \"}\n                <Heading level={2}>\n                  <Link style={{ color: \"inherit\" }} to=\"/\">\n                    OneGraph Product Updates\n                  </Link>\n                </Heading>\n              </Box>\n              <Anchor href=\"https://onegraph.com\">\n                <Text size=\"small\">Learn more about OneGraph</Text>\n              </Anchor>\n            </Box>\n            <Box gridArea=\"main\">\n              <ScrollMemory />\n              <Route\n                path=\"/\"\n                exact\n                render={() => (\n                  <PostsRoot\n                    isLoggedIn={this.state.isLoggedIn}\n                    login={this._login}\n                    logout={this._logout}\n                  />\n                )}\n              />\n              <Route\n                path=\"/post/:issueNumber\"\n                exact\n                render={props => (\n                  <PostRoot\n                    isLoggedIn={this.state.isLoggedIn}\n                    login={this._login}\n                    logout={this._logout}\n                    issueNumber={parseInt(props.match.params.issueNumber, 10)}\n                  />\n                )}\n              />\n\n              <NotificationContainer />\n            </Box>\n          </Grid>\n        </Grommet>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}