version: 2.1
jobs:
  build_changelog:
    docker:
      - image: node:12
    resource_class: "xlarge"
    environment:
      - TERM: dumb
    steps:
      - checkout
      - restore_cache:
          key: changelog-dependency-cache-v3-{{ checksum "yarn.lock" }}
      - run:
          name: 'Install changelog dependencies'
          command: "yarn install --frozen-lockfile"
      - save_cache:
          key: changelog-dependency-cache-v3-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: 'Build'
          command: |
            PUBLIC_PATH=/changelog/ yarn build
      - persist_to_workspace:
          root: ./
          paths:
            - node_modules
            - build/
            - firebase.json
            - .firebaserc
            - index.js
            - package.json
            - cloudbuild.yaml
            - cloudbuild-staging.yaml
  deploy:
    docker:
      - image: node:10
    environment:
      - TERM: dumb
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: 'Deploy to Firebase'
          command: |
            yarn firebase-deploy-directory --project onegraph-dashboard --subpath changelog --directory build/public/ --commit --token "$FIREBASE_TOKEN"
            yarn firebase deploy --debug -P prod --only functions --token "$FIREBASE_TOKEN"

  staging_deploy:
    docker:
      - image: dwwoelfel/google-sdk-node
    environment:
      - TERM: dumb
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: 'Setup gcloud'
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project onegraph-prod

      - run:
          name: 'Deploy to Firebase'
          command: |
            yarn firebase-deploy-directory --project oph-dashboard-staging --subpath changelog --directory build/public/ --commit --token "$FIREBASE_TOKEN"
            yarn deploy:cloudrun:staging

workflows:
  version: 2.1
  build-deploy:
    jobs:
      - build_changelog
      - deploy:
          requires:
            - build_changelog
          filters:
            branches:
              only: master
      - staging_deploy:
          requires:
            - build_changelog
          filters:
            branches:
              ignore: master
